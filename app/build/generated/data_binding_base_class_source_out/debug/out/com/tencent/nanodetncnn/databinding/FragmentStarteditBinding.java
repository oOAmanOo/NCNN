// Generated by view binder compiler. Do not edit!
package com.tencent.nanodetncnn.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tencent.nanodetncnn.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentStarteditBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextView alertTime;

  @NonNull
  public final Button button2;

  @NonNull
  public final TextView mode;

  @NonNull
  public final TextView name;

  @NonNull
  public final TextView recipeTime;

  private FragmentStarteditBinding(@NonNull FrameLayout rootView, @NonNull TextView alertTime,
      @NonNull Button button2, @NonNull TextView mode, @NonNull TextView name,
      @NonNull TextView recipeTime) {
    this.rootView = rootView;
    this.alertTime = alertTime;
    this.button2 = button2;
    this.mode = mode;
    this.name = name;
    this.recipeTime = recipeTime;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentStarteditBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentStarteditBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_startedit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentStarteditBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.alertTime;
      TextView alertTime = ViewBindings.findChildViewById(rootView, id);
      if (alertTime == null) {
        break missingId;
      }

      id = R.id.button2;
      Button button2 = ViewBindings.findChildViewById(rootView, id);
      if (button2 == null) {
        break missingId;
      }

      id = R.id.mode;
      TextView mode = ViewBindings.findChildViewById(rootView, id);
      if (mode == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.recipeTime;
      TextView recipeTime = ViewBindings.findChildViewById(rootView, id);
      if (recipeTime == null) {
        break missingId;
      }

      return new FragmentStarteditBinding((FrameLayout) rootView, alertTime, button2, mode, name,
          recipeTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
