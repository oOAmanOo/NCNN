// Generated by view binder compiler. Do not edit!
package com.tencent.nanodetncnn.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tencent.nanodetncnn.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogFoodAdapterBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView dialogFoodCard;

  @NonNull
  public final ImageView dialogFoodImg;

  @NonNull
  public final TextView dialogFoodName;

  @NonNull
  public final ImageView uncheckedbox;

  private DialogFoodAdapterBinding(@NonNull LinearLayout rootView, @NonNull CardView dialogFoodCard,
      @NonNull ImageView dialogFoodImg, @NonNull TextView dialogFoodName,
      @NonNull ImageView uncheckedbox) {
    this.rootView = rootView;
    this.dialogFoodCard = dialogFoodCard;
    this.dialogFoodImg = dialogFoodImg;
    this.dialogFoodName = dialogFoodName;
    this.uncheckedbox = uncheckedbox;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogFoodAdapterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogFoodAdapterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_food_adapter, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogFoodAdapterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dialog_food_card;
      CardView dialogFoodCard = ViewBindings.findChildViewById(rootView, id);
      if (dialogFoodCard == null) {
        break missingId;
      }

      id = R.id.dialog_food_img;
      ImageView dialogFoodImg = ViewBindings.findChildViewById(rootView, id);
      if (dialogFoodImg == null) {
        break missingId;
      }

      id = R.id.dialog_food_name;
      TextView dialogFoodName = ViewBindings.findChildViewById(rootView, id);
      if (dialogFoodName == null) {
        break missingId;
      }

      id = R.id.uncheckedbox;
      ImageView uncheckedbox = ViewBindings.findChildViewById(rootView, id);
      if (uncheckedbox == null) {
        break missingId;
      }

      return new DialogFoodAdapterBinding((LinearLayout) rootView, dialogFoodCard, dialogFoodImg,
          dialogFoodName, uncheckedbox);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
