// Generated by view binder compiler. Do not edit!
package com.tencent.nanodetncnn.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tencent.nanodetncnn.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class Editfridge2LayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ConstraintLayout ef2Constraint;

  @NonNull
  public final Button ef2NextButton;

  @NonNull
  public final Button ef2ReButton;

  @NonNull
  public final RecyclerView ef2RecyclerView;

  private Editfridge2LayoutBinding(@NonNull LinearLayout rootView,
      @NonNull ConstraintLayout ef2Constraint, @NonNull Button ef2NextButton,
      @NonNull Button ef2ReButton, @NonNull RecyclerView ef2RecyclerView) {
    this.rootView = rootView;
    this.ef2Constraint = ef2Constraint;
    this.ef2NextButton = ef2NextButton;
    this.ef2ReButton = ef2ReButton;
    this.ef2RecyclerView = ef2RecyclerView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static Editfridge2LayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static Editfridge2LayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.editfridge2_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static Editfridge2LayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ef2_constraint;
      ConstraintLayout ef2Constraint = ViewBindings.findChildViewById(rootView, id);
      if (ef2Constraint == null) {
        break missingId;
      }

      id = R.id.ef2_next_button;
      Button ef2NextButton = ViewBindings.findChildViewById(rootView, id);
      if (ef2NextButton == null) {
        break missingId;
      }

      id = R.id.ef2_re_button;
      Button ef2ReButton = ViewBindings.findChildViewById(rootView, id);
      if (ef2ReButton == null) {
        break missingId;
      }

      id = R.id.ef2_recyclerView;
      RecyclerView ef2RecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (ef2RecyclerView == null) {
        break missingId;
      }

      return new Editfridge2LayoutBinding((LinearLayout) rootView, ef2Constraint, ef2NextButton,
          ef2ReButton, ef2RecyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
