// Generated by view binder compiler. Do not edit!
package com.tencent.nanodetncnn.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tencent.nanodetncnn.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AlarmdialogRecipeModeLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout alarmRecipeMode;

  @NonNull
  public final CheckBox alarmRecipeModeCheckBox;

  @NonNull
  public final ImageButton alarmRecipeModeClose;

  @NonNull
  public final ImageView alarmRecipeModeImg;

  @NonNull
  public final TextView alarmRecipeModeText;

  @NonNull
  public final ScrollView alarmRm;

  private AlarmdialogRecipeModeLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout alarmRecipeMode, @NonNull CheckBox alarmRecipeModeCheckBox,
      @NonNull ImageButton alarmRecipeModeClose, @NonNull ImageView alarmRecipeModeImg,
      @NonNull TextView alarmRecipeModeText, @NonNull ScrollView alarmRm) {
    this.rootView = rootView;
    this.alarmRecipeMode = alarmRecipeMode;
    this.alarmRecipeModeCheckBox = alarmRecipeModeCheckBox;
    this.alarmRecipeModeClose = alarmRecipeModeClose;
    this.alarmRecipeModeImg = alarmRecipeModeImg;
    this.alarmRecipeModeText = alarmRecipeModeText;
    this.alarmRm = alarmRm;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AlarmdialogRecipeModeLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AlarmdialogRecipeModeLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.alarmdialog_recipe_mode_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AlarmdialogRecipeModeLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.alarm_recipe_mode;
      LinearLayout alarmRecipeMode = ViewBindings.findChildViewById(rootView, id);
      if (alarmRecipeMode == null) {
        break missingId;
      }

      id = R.id.alarm_recipe_mode_checkBox;
      CheckBox alarmRecipeModeCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (alarmRecipeModeCheckBox == null) {
        break missingId;
      }

      id = R.id.alarm_recipe_mode_close;
      ImageButton alarmRecipeModeClose = ViewBindings.findChildViewById(rootView, id);
      if (alarmRecipeModeClose == null) {
        break missingId;
      }

      id = R.id.alarm_recipe_mode_img;
      ImageView alarmRecipeModeImg = ViewBindings.findChildViewById(rootView, id);
      if (alarmRecipeModeImg == null) {
        break missingId;
      }

      id = R.id.alarm_recipe_mode_text;
      TextView alarmRecipeModeText = ViewBindings.findChildViewById(rootView, id);
      if (alarmRecipeModeText == null) {
        break missingId;
      }

      id = R.id.alarm_rm;
      ScrollView alarmRm = ViewBindings.findChildViewById(rootView, id);
      if (alarmRm == null) {
        break missingId;
      }

      return new AlarmdialogRecipeModeLayoutBinding((ConstraintLayout) rootView, alarmRecipeMode,
          alarmRecipeModeCheckBox, alarmRecipeModeClose, alarmRecipeModeImg, alarmRecipeModeText,
          alarmRm);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
