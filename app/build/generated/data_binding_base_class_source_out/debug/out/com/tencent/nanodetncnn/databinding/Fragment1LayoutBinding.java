// Generated by view binder compiler. Do not edit!
package com.tencent.nanodetncnn.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tencent.nanodetncnn.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class Fragment1LayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ConstraintLayout d1Constraint;

  @NonNull
  public final Button d1NextButton;

  @NonNull
  public final Button d1ReButton;

  @NonNull
  public final RecyclerView d1RecyclerView;

  private Fragment1LayoutBinding(@NonNull LinearLayout rootView,
      @NonNull ConstraintLayout d1Constraint, @NonNull Button d1NextButton,
      @NonNull Button d1ReButton, @NonNull RecyclerView d1RecyclerView) {
    this.rootView = rootView;
    this.d1Constraint = d1Constraint;
    this.d1NextButton = d1NextButton;
    this.d1ReButton = d1ReButton;
    this.d1RecyclerView = d1RecyclerView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static Fragment1LayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static Fragment1LayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment1_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static Fragment1LayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.d1_constraint;
      ConstraintLayout d1Constraint = ViewBindings.findChildViewById(rootView, id);
      if (d1Constraint == null) {
        break missingId;
      }

      id = R.id.d1_next_button;
      Button d1NextButton = ViewBindings.findChildViewById(rootView, id);
      if (d1NextButton == null) {
        break missingId;
      }

      id = R.id.d1_re_button;
      Button d1ReButton = ViewBindings.findChildViewById(rootView, id);
      if (d1ReButton == null) {
        break missingId;
      }

      id = R.id.d1_recyclerView;
      RecyclerView d1RecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (d1RecyclerView == null) {
        break missingId;
      }

      return new Fragment1LayoutBinding((LinearLayout) rootView, d1Constraint, d1NextButton,
          d1ReButton, d1RecyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
