// Generated by view binder compiler. Do not edit!
package com.tencent.nanodetncnn.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tencent.nanodetncnn.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AdapterFridgeHistoryListItemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final View adapterFridgeHistoryListItemBg;

  @NonNull
  public final TextView adapterFridgeHistoryListItemDate;

  @NonNull
  public final TextView adapterFridgeHistoryListItemUpdateAmount;

  @NonNull
  public final TextView adapterFridgeHistoryListItemUpdatenum;

  @NonNull
  public final TextView adapterFridgeHistoryListItemUse;

  @NonNull
  public final RelativeLayout viewVideoLargeGridListItemAll;

  private AdapterFridgeHistoryListItemBinding(@NonNull RelativeLayout rootView,
      @NonNull View adapterFridgeHistoryListItemBg,
      @NonNull TextView adapterFridgeHistoryListItemDate,
      @NonNull TextView adapterFridgeHistoryListItemUpdateAmount,
      @NonNull TextView adapterFridgeHistoryListItemUpdatenum,
      @NonNull TextView adapterFridgeHistoryListItemUse,
      @NonNull RelativeLayout viewVideoLargeGridListItemAll) {
    this.rootView = rootView;
    this.adapterFridgeHistoryListItemBg = adapterFridgeHistoryListItemBg;
    this.adapterFridgeHistoryListItemDate = adapterFridgeHistoryListItemDate;
    this.adapterFridgeHistoryListItemUpdateAmount = adapterFridgeHistoryListItemUpdateAmount;
    this.adapterFridgeHistoryListItemUpdatenum = adapterFridgeHistoryListItemUpdatenum;
    this.adapterFridgeHistoryListItemUse = adapterFridgeHistoryListItemUse;
    this.viewVideoLargeGridListItemAll = viewVideoLargeGridListItemAll;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AdapterFridgeHistoryListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdapterFridgeHistoryListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.adapter_fridge_history_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdapterFridgeHistoryListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adapter_fridge_history_list_item_bg;
      View adapterFridgeHistoryListItemBg = ViewBindings.findChildViewById(rootView, id);
      if (adapterFridgeHistoryListItemBg == null) {
        break missingId;
      }

      id = R.id.adapter_fridge_history_list_item_date;
      TextView adapterFridgeHistoryListItemDate = ViewBindings.findChildViewById(rootView, id);
      if (adapterFridgeHistoryListItemDate == null) {
        break missingId;
      }

      id = R.id.adapter_fridge_history_list_item_updateAmount;
      TextView adapterFridgeHistoryListItemUpdateAmount = ViewBindings.findChildViewById(rootView, id);
      if (adapterFridgeHistoryListItemUpdateAmount == null) {
        break missingId;
      }

      id = R.id.adapter_fridge_history_list_item_updatenum;
      TextView adapterFridgeHistoryListItemUpdatenum = ViewBindings.findChildViewById(rootView, id);
      if (adapterFridgeHistoryListItemUpdatenum == null) {
        break missingId;
      }

      id = R.id.adapter_fridge_history_list_item_use;
      TextView adapterFridgeHistoryListItemUse = ViewBindings.findChildViewById(rootView, id);
      if (adapterFridgeHistoryListItemUse == null) {
        break missingId;
      }

      RelativeLayout viewVideoLargeGridListItemAll = (RelativeLayout) rootView;

      return new AdapterFridgeHistoryListItemBinding((RelativeLayout) rootView,
          adapterFridgeHistoryListItemBg, adapterFridgeHistoryListItemDate,
          adapterFridgeHistoryListItemUpdateAmount, adapterFridgeHistoryListItemUpdatenum,
          adapterFridgeHistoryListItemUse, viewVideoLargeGridListItemAll);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
