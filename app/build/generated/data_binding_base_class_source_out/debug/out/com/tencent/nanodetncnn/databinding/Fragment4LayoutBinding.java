// Generated by view binder compiler. Do not edit!
package com.tencent.nanodetncnn.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tencent.nanodetncnn.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class Fragment4LayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ConstraintLayout d4Constraint;

  @NonNull
  public final Button d4NextButton;

  @NonNull
  public final Button d4ReButton;

  @NonNull
  public final RecyclerView d4RecyclerView;

  private Fragment4LayoutBinding(@NonNull LinearLayout rootView,
      @NonNull ConstraintLayout d4Constraint, @NonNull Button d4NextButton,
      @NonNull Button d4ReButton, @NonNull RecyclerView d4RecyclerView) {
    this.rootView = rootView;
    this.d4Constraint = d4Constraint;
    this.d4NextButton = d4NextButton;
    this.d4ReButton = d4ReButton;
    this.d4RecyclerView = d4RecyclerView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static Fragment4LayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static Fragment4LayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment4_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static Fragment4LayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.d4_constraint;
      ConstraintLayout d4Constraint = ViewBindings.findChildViewById(rootView, id);
      if (d4Constraint == null) {
        break missingId;
      }

      id = R.id.d4_next_button;
      Button d4NextButton = ViewBindings.findChildViewById(rootView, id);
      if (d4NextButton == null) {
        break missingId;
      }

      id = R.id.d4_re_button;
      Button d4ReButton = ViewBindings.findChildViewById(rootView, id);
      if (d4ReButton == null) {
        break missingId;
      }

      id = R.id.d4_recyclerView;
      RecyclerView d4RecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (d4RecyclerView == null) {
        break missingId;
      }

      return new Fragment4LayoutBinding((LinearLayout) rootView, d4Constraint, d4NextButton,
          d4ReButton, d4RecyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
