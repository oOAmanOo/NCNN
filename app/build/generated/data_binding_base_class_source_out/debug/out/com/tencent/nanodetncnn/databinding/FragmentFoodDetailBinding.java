// Generated by view binder compiler. Do not edit!
package com.tencent.nanodetncnn.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tencent.nanodetncnn.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFoodDetailBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView fragmentFoodDetailLine1;

  @NonNull
  public final TextView fragmentFoodDetailLine2;

  @NonNull
  public final TextView fragmentFoodDetailName;

  @NonNull
  public final ImageView fragmentFoodDetailPic;

  private FragmentFoodDetailBinding(@NonNull LinearLayout rootView,
      @NonNull TextView fragmentFoodDetailLine1, @NonNull TextView fragmentFoodDetailLine2,
      @NonNull TextView fragmentFoodDetailName, @NonNull ImageView fragmentFoodDetailPic) {
    this.rootView = rootView;
    this.fragmentFoodDetailLine1 = fragmentFoodDetailLine1;
    this.fragmentFoodDetailLine2 = fragmentFoodDetailLine2;
    this.fragmentFoodDetailName = fragmentFoodDetailName;
    this.fragmentFoodDetailPic = fragmentFoodDetailPic;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFoodDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFoodDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_food_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFoodDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fragment_food_detail_line1;
      TextView fragmentFoodDetailLine1 = ViewBindings.findChildViewById(rootView, id);
      if (fragmentFoodDetailLine1 == null) {
        break missingId;
      }

      id = R.id.fragment_food_detail_line2;
      TextView fragmentFoodDetailLine2 = ViewBindings.findChildViewById(rootView, id);
      if (fragmentFoodDetailLine2 == null) {
        break missingId;
      }

      id = R.id.fragment_food_detail_name;
      TextView fragmentFoodDetailName = ViewBindings.findChildViewById(rootView, id);
      if (fragmentFoodDetailName == null) {
        break missingId;
      }

      id = R.id.fragment_food_detail_pic;
      ImageView fragmentFoodDetailPic = ViewBindings.findChildViewById(rootView, id);
      if (fragmentFoodDetailPic == null) {
        break missingId;
      }

      return new FragmentFoodDetailBinding((LinearLayout) rootView, fragmentFoodDetailLine1,
          fragmentFoodDetailLine2, fragmentFoodDetailName, fragmentFoodDetailPic);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
